@model WebApi.Models.evaluaciones

@using (Ajax.BeginForm("Create", "evaluaciones", new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    OnBegin = "StartValidation",
    OnSuccess = "DoneEvaluacion"
},
                                                                new { id = "evaluacionfrm" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="gridSystemModalLabel">Evaluaciones</h4>
    </div>
    <div class="row">
        <div class="col-md-12">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)
            <div class="form-group">
                @Html.LabelFor(model => model.proyectos_id, "Proyecto", htmlAttributes: new { @class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("proyectos_id", null, htmlAttributes: new { @class = "form-control" , disabled = "disable" })
                    @Html.ValidationMessageFor(model => model.proyectos_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.categorias_id, "Métrica", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("categorias_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.categorias_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.a, "Variable A", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.a, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.a, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.b, "Variable B", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.b, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.b, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.c, "Variable C", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.c, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.c, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.resultado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.resultado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.resultado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fecha, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<script>

    function StartValidation() {
        return $.validator.unobtrusive.parse($('#evaluacionfrm'));
    }
    function DoneEvaluacion(response) {
        $('#modal-container').modal('hide');
    }

</script>
